/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package symcode.gui;

import java.awt.Color;
import java.awt.GridLayout;
import java.io.File;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;
import javax.swing.text.Highlighter.HighlightPainter;
import symcode.evaluator.EvaluationError;
import symcode.evaluator.Evaluator;
import symcode.evaluator.Product;
import symcode.evaluator.SyntaxError;
import symcode.lab.Lab;
import symcode.lab.LabLoader;
import symcode.svg.StripSvg;
import symcode.svg.Svg;

/**
 *
 * @author Ahmed Alshakh www.alshakh.net
 */
public class MainFrame extends javax.swing.JFrame {

	private final Set<Lab> _allLabs;
	private final IconPanel iconPanel = new IconPanel();

	/**
	 * Creates new form MainFrame
	 */
	public MainFrame() {
		initComponents();
		//
		_allLabs = new HashSet<Lab>();
		//
		File labDir = new File("labs");
		File lab;
		String[] children = labDir.list();
		for (int i = 0; children != null && i < children.length; i++) {
			lab = new File(labDir, children[i]);
			if (lab.isFile() && lab.toPath().toString().toLowerCase().endsWith("json")) {
				Lab l = LabLoader.loadLab(lab);
				_allLabs.add(l);
			}
		}
		//
		//
		//
		codeArea.getDocument().addDocumentListener(new DocumentListener() {
			@Override
			public void changedUpdate(DocumentEvent e) {
				highlightCode();
			}

			@Override
			public void insertUpdate(DocumentEvent e) {
				highlightCode();
			}

			@Override
			public void removeUpdate(DocumentEvent e) {
				highlightCode();
			}
		});
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                buttonGroup1 = new javax.swing.ButtonGroup();
                evalButton = new javax.swing.JButton();
                jScrollPane1 = new javax.swing.JScrollPane();
                codeArea = new javax.swing.JTextArea();
                iconPanelScroll = new JScrollPane(iconPanel);
                sizeSlider = new javax.swing.JSlider();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setTitle("DEMO - DEMO - DEMO");

                evalButton.setText("Eval");
                evalButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                evalButtonActionPerformed(evt);
                        }
                });

                codeArea.setColumns(20);
                codeArea.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
                codeArea.setLineWrap(true);
                codeArea.setRows(5);
                jScrollPane1.setViewportView(codeArea);

                sizeSlider.setMaximum(200);
                sizeSlider.setMinimum(1);
                sizeSlider.setValue(100);
                sizeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
                        public void stateChanged(javax.swing.event.ChangeEvent evt) {
                                sizeSliderStateChanged(evt);
                        }
                });

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jScrollPane1)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(sizeSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(evalButton, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE))))
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(iconPanelScroll)))
                                .addContainerGap())
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(sizeSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(evalButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(iconPanelScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

        private void evalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evalButtonActionPerformed
		eval();
        }//GEN-LAST:event_evalButtonActionPerformed

        private void sizeSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sizeSliderStateChanged
		eval();
        }//GEN-LAST:event_sizeSliderStateChanged
	Svg currentSvg;
	public void eval(){
		if(codeArea.getText().isEmpty()) return;
		try {
			//
			Evaluator evaluator;
				evaluator = new Evaluator((HashSet<Lab>) _allLabs);
			Product result = evaluator.eval(codeArea.getText());
			
			currentSvg = new StripSvg(result);
			double factor = sizeSlider.getValue()/(double)100;
			Svg svg = currentSvg.scale(factor,factor).toFullSvg();
			iconPanel.setIcon(svg.toIcon());
			iconPanel.repaint();
			iconPanelScroll.repaint();
		} catch (SyntaxError | EvaluationError ex) {
			JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
		}
	}
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				JFrame jf = new MainFrame();
				jf.setVisible(true);
				jf.setLocationRelativeTo(null);
			}
		});
	}

	/**
	 * produce better visual aid to understand code. Now, only quoted is
	 * implemented
	 */
	public void highlightCode() {
		Highlighter highlighter = codeArea.getHighlighter();
		highlighter.removeAllHighlights();
		HighlightPainter painter = new DefaultHighlighter.DefaultHighlightPainter(new Color(0xDFBCEB));
		String text = codeArea.getText().toString();
		int b = 0, e = 0;
		while (text.indexOf("\"", e + 1) != -1) {
			b = text.indexOf("\"", e + 1);
			e = text.indexOf("\"", b + 1);
			if (e == -1) {
				e = text.length();
			} else {
				e+=1; // include the " in the highlighting
			}
			try {
				highlighter.addHighlight(b, e, painter);
			} catch (BadLocationException ex) {

			}
		}
	}

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.ButtonGroup buttonGroup1;
        private javax.swing.JTextArea codeArea;
        private javax.swing.JButton evalButton;
        private javax.swing.JScrollPane iconPanelScroll;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JSlider sizeSlider;
        // End of variables declaration//GEN-END:variables
}
