package mp3organizer.gui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import mp3organizer.core.FailedFile;
import mp3organizer.core.MediaFileList;
import org.jaudiotagger.tag.FieldKey;

/**
 *
 * @author yousef-alsber
 */
public class TagsFrame extends javax.swing.JFrame {

    /**
     * Creates new form TagesFrame
     * @param mediaFileList
     */
    public TagsFrame(MediaFileList mediaFileList) {
        initComponents();
        this.mediaFileList = mediaFileList;
        songTextField.setText(mediaFileList.getField(FieldKey.TITLE));
        albumTextField.setText(mediaFileList.getField(FieldKey.ALBUM));
        yearTextField.setText(mediaFileList.getField(FieldKey.YEAR));
        artistTextField.setText(mediaFileList.getField(FieldKey.ARTIST));
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        yearTextField = new javax.swing.JTextField();
        yearLabel = new javax.swing.JLabel();
        albumTextField = new javax.swing.JTextField();
        cancelButton = new javax.swing.JButton();
        changeButton = new javax.swing.JButton();
        songTitleLabel = new javax.swing.JLabel();
        artistTextField = new javax.swing.JTextField();
        albumLabel = new javax.swing.JLabel();
        songTextField = new javax.swing.JTextField();
        artistLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(380, 260));

        yearTextField.setForeground(java.awt.SystemColor.controlShadow);
        yearTextField.setName("yearTextField"); // NOI18N
        yearTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                yearTextFieldMouseClicked(evt);
            }
        });

        yearLabel.setText("Year:");

        albumTextField.setForeground(java.awt.SystemColor.controlShadow);
        albumTextField.setName("albumTextField"); // NOI18N
        albumTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                albumTextFieldMouseClicked(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        changeButton.setText("Change");
        changeButton.setName("changeButton"); // NOI18N
        changeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeButtonActionPerformed(evt);
            }
        });

        songTitleLabel.setText("Song Title:");

        artistTextField.setForeground(java.awt.SystemColor.controlShadow);
        artistTextField.setName("artistTextField"); // NOI18N
        artistTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                artistTextFieldMouseClicked(evt);
            }
        });

        albumLabel.setText("Album:");

        songTextField.setForeground(java.awt.SystemColor.controlShadow);
        songTextField.setName("songTextField"); // NOI18N
        songTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                songTextFieldMouseClicked(evt);
            }
        });

        artistLabel.setText("Artist:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(changeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(songTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(artistLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(albumLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(yearLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(yearTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(albumTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(artistTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(songTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(31, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(songTitleLabel)
                    .addComponent(songTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(artistLabel)
                    .addComponent(artistTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(albumLabel)
                    .addComponent(albumTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearLabel))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(changeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        goBack();
    }//GEN-LAST:event_cancelButtonActionPerformed
    private void goBack(){
        FileFrame fileFrame = new FileFrame();
        fileFrame.setVisible(true);
        this.setVisible(false);
        this.dispose();
        
    }
    private void songTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_songTextFieldMouseClicked

    }//GEN-LAST:event_songTextFieldMouseClicked

    private void changeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeButtonActionPerformed
        String title = songTextField.getText();
        String artist = artistTextField.getText();
        String album = albumTextField.getText();
        String year = yearTextField.getText();
        
        try {
            if(!title.isEmpty()) mediaFileList.setField(FieldKey.TITLE, title);
            if(!artist.isEmpty())mediaFileList.setField(FieldKey.ARTIST, artist);
            if(!album.isEmpty())mediaFileList.setField(FieldKey.ALBUM, album);
            if(!year.isEmpty()) mediaFileList.setField(FieldKey.YEAR, year);
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
        
        ArrayList<FailedFile> fails=mediaFileList.commit();
        if(!fails.isEmpty()){
            StringBuilder errors = new StringBuilder ();
                        for (FailedFile fail : fails) {
                            errors.append("\n").append(fail.getFilePath()).append("\n      ").append(fail.getMsg());
                        }
                        JOptionPane.showMessageDialog(this,
                                              "Job is done. files below has failed" + errors.toString(), "Error",
                                              JOptionPane.INFORMATION_MESSAGE);
        } else {
             JOptionPane.showMessageDialog(this,
                                              "Job is done.", "Error",
                                              JOptionPane.INFORMATION_MESSAGE);
        }
        goBack();
    }//GEN-LAST:event_changeButtonActionPerformed

    private void artistTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_artistTextFieldMouseClicked
       // artistTextField.setText("");
    }//GEN-LAST:event_artistTextFieldMouseClicked

    private void albumTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_albumTextFieldMouseClicked
        //albumTextField.setText("");
    }//GEN-LAST:event_albumTextFieldMouseClicked

    private void yearTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yearTextFieldMouseClicked
      // yearTextField.setText("");
    }//GEN-LAST:event_yearTextFieldMouseClicked

    private final MediaFileList mediaFileList;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel albumLabel;
    private javax.swing.JTextField albumTextField;
    private javax.swing.JLabel artistLabel;
    private javax.swing.JTextField artistTextField;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton changeButton;
    private javax.swing.JTextField songTextField;
    private javax.swing.JLabel songTitleLabel;
    private javax.swing.JLabel yearLabel;
    private javax.swing.JTextField yearTextField;
    // End of variables declaration//GEN-END:variables
}
